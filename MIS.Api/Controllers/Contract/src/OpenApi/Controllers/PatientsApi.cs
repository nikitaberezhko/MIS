/*
 * Medical Information System (MIS) API
 *
 * API для медицинской информационной системы
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using MIS.Api.Controllers.Contract.OpenApi.Attributes;
using MIS.Api.Controllers.Contract.OpenApi.Models;
using Swashbuckle.AspNetCore.Annotations;

namespace MIS.Api.Controllers.Contract.OpenApi.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class PatientsApiController : ControllerBase
    { 
        /// <summary>
        /// Получить список всех пациентов
        /// </summary>
        /// <remarks>Возвращает список всех пациентов в системе</remarks>
        /// <param name="page">Номер страницы (начиная с 1)</param>
        /// <param name="pageSize">Размер страницы</param>
        /// <response code="200">Успешный ответ со списком пациентов</response>
        /// <response code="400">Некорректный запрос</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/patients")]
        [ValidateModelState]
        [SwaggerOperation("GetAllPatients")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetAllPatients200Response), description: "Успешный ответ со списком пациентов")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Некорректный запрос")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Внутренняя ошибка сервера")]
        public abstract Task<IActionResult> GetAllPatients([FromQuery (Name = "page")]int? page, [FromQuery (Name = "pageSize")][Range(1, 100)]int? pageSize);

        /// <summary>
        /// Получить информацию о конкретном пациенте
        /// </summary>
        /// <remarks>Возвращает детальную информацию о пациенте по его ID</remarks>
        /// <param name="patientId">Уникальный идентификатор пациента</param>
        /// <response code="200">Успешный ответ с информацией о пациенте</response>
        /// <response code="404">Ресурс не найден</response>
        /// <response code="400">Некорректный запрос</response>
        /// <response code="500">Внутренняя ошибка сервера</response>
        [HttpGet]
        [Route("/patients/{patientId}")]
        [ValidateModelState]
        [SwaggerOperation("GetPatientById")]
        [SwaggerResponse(statusCode: 200, type: typeof(Patient), description: "Успешный ответ с информацией о пациенте")]
        [SwaggerResponse(statusCode: 404, type: typeof(Error), description: "Ресурс не найден")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Некорректный запрос")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Внутренняя ошибка сервера")]
        public abstract Task<IActionResult> GetPatientById([FromRoute (Name = "patientId")][Required]Guid patientId);
    }
}
