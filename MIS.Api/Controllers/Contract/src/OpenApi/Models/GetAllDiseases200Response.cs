/*
 * Medical Information System (MIS) API
 *
 * API для медицинской информационной системы
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace MIS.Api.Controllers.Contract.OpenApi.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class GetAllDiseases200Response : IEquatable<GetAllDiseases200Response>
    {
        /// <summary>
        /// Gets or Sets Diseases
        /// </summary>
        [DataMember(Name="diseases", EmitDefaultValue=false)]
        public List<Disease> Diseases { get; set; }

        /// <summary>
        /// Gets or Sets Pagination
        /// </summary>
        [DataMember(Name="pagination", EmitDefaultValue=false)]
        public PaginationInfo Pagination { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetAllDiseases200Response {\n");
            sb.Append("  Diseases: ").Append(Diseases).Append("\n");
            sb.Append("  Pagination: ").Append(Pagination).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((GetAllDiseases200Response)obj);
        }

        /// <summary>
        /// Returns true if GetAllDiseases200Response instances are equal
        /// </summary>
        /// <param name="other">Instance of GetAllDiseases200Response to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetAllDiseases200Response other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Diseases == other.Diseases ||
                    Diseases != null &&
                    other.Diseases != null &&
                    Diseases.SequenceEqual(other.Diseases)
                ) && 
                (
                    Pagination == other.Pagination ||
                    Pagination != null &&
                    Pagination.Equals(other.Pagination)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Diseases != null)
                    hashCode = hashCode * 59 + Diseases.GetHashCode();
                    if (Pagination != null)
                    hashCode = hashCode * 59 + Pagination.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(GetAllDiseases200Response left, GetAllDiseases200Response right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(GetAllDiseases200Response left, GetAllDiseases200Response right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
